---
import { getCollection, type CollectionEntry, render } from 'astro:content';
import MarkdownLayout from '../../../layouts/MarkdownLayout.astro';
import { SUPPORTED_LANGUAGES } from '../../../utils/i18n';
import type { SupportedLanguage } from '../../../utils/i18n';

export async function getStaticPaths() {
  const paths: Array<{
    params: { lang: SupportedLanguage; slug: string };
    props: { entry: CollectionEntry<'lab'> };
  }> = [];
  
  for (const lang of SUPPORTED_LANGUAGES) {
    const allLab = await getCollection('lab') as CollectionEntry<'lab'>[];
    const langLab = allLab.filter(item => 
      !item.data.draft && 
      (item.data.language === lang || (!item.data.language && lang === 'en'))
    );
    
    for (const item of langLab) {
      // Clean slug: remove language prefix and file extension
      const cleanSlug = item.id.replace(/^[a-z]{2}\//, '').replace(/\.mdx?$/, '');
      paths.push({
        params: { 
          lang, 
          slug: cleanSlug
        },
        props: { entry: item }
      });
    }
  }
  
  return paths;
}

const { entry } = Astro.props;

const { Content } = await render(entry);
---

<MarkdownLayout frontmatter={entry.data}>
  <Content />
</MarkdownLayout>

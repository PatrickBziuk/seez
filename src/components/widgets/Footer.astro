---
import { Icon } from 'astro-icon/components';
import { SITE } from 'astrowind:config';
import { getHomePermalink } from '~/utils/permalinks';
import { useTranslation } from 'astro-i18next';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface Links {
  title?: string;
  links: Array<Link>;
}

export interface Props {
  links: Array<Links>;
  secondaryLinks: Array<Link>;
  socialLinks: Array<Link>;
  theme?: string;
  locale?: 'en' | 'de';
}

const { socialLinks = [], secondaryLinks = [], links = [], theme = 'light' } = Astro.props;
const { t } = useTranslation();
---

<footer class:list={[{ dark: theme === 'dark' }, 'relative border-t border-gray-200 dark:border-slate-800 not-prose']}>
  <div class="dark:bg-dark absolute inset-0 pointer-events-none" aria-hidden="true"></div>
  <div
    class="relative max-w-7xl mx-auto px-4 sm:px-6 dark:text-slate-300 intersect-once intersect-quarter intercept-no-queue motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade"
  >
    <div class="grid grid-cols-12 gap-4 gap-y-8 sm:gap-8 py-8 md:py-12">
      <div class="col-span-12 lg:col-span-4">
        <div class="mb-2">
          <a class="inline-block font-bold text-xl" href={getHomePermalink()}>{SITE?.name}</a>
        </div>
        <div class="text-sm text-muted flex gap-1">
          {
            secondaryLinks.map(({ text, href }, index) => (
              <>
                {index !== 0 ? ' Â· ' : ''}
                <a href={href}>{t(`legal.${text}`)}</a>
              </>
            ))
          }
        </div>
      </div>
      {
        links.map(({ title, links }) => (
          <div>
            <div class="dark:text-gray-300 font-medium mb-2">{t(`footer.${title}`)}</div>
            {links && Array.isArray(links) && links.length > 0 && (
              <ul>
                {links.map(({ text, href, ariaLabel }) => (
                  <li>
                    <a href={href} aria-label={t(`footer.${ariaLabel || text}`)}>
                      {t(`footer.${text}`)}
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </div>
        ))
      }
    </div>
    <div class="md:flex md:items-center md:justify-between py-6 md:py-8">
      {
        socialLinks?.length ? (
          <ul>
            {socialLinks.map(({ ariaLabel, href, text, icon }) => (
              <li>
                <a href={href} aria-label={t(`social.${ariaLabel || text}`)}>
                  {icon && <Icon name={icon} class="w-5 h-5" />}
                  {t(`social.${text}`)}
                </a>
              </li>
            ))}
          </ul>
        ) : (
          ''
        )
      }

      <div class="text-sm mr-4 dark:text-muted">
        {t('footer.footNote')}
      </div>
    </div>
  </div>
</footer>

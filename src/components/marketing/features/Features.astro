---
/**
 * Features - Displays feature lists with icons, titles, and descriptions in a grid layout
 * @props {title?: string, subtitle?: string, tagline?: string, items?: Array, columns?: number, defaultIcon?: string, id?: string, isDark?: boolean, classes?: object, bg?: string} - Feature content and layout configuration
 * @behavior Renders feature section with headline and grid of feature items, supports responsive columns and custom styling
 * @dependencies WidgetWrapper.astro, ItemGrid.astro, Headline.astro, Tailwind CSS
 * @usedBy Product pages, service descriptions, homepage feature sections
 */
import WidgetWrapper from '~/components/ui/layout/WidgetWrapper.astro';
import ItemGrid from '~/components/ui/layout/ItemGrid.astro';
import Headline from '~/components/ui/display/Headline.astro';
import type { Features as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  columns = 2,

  defaultIcon,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-5xl ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
  <ItemGrid
    items={items}
    columns={columns}
    defaultIcon={defaultIcon}
    classes={{
      container: '',
      title: 'md:text-[1.3rem]',
      icon: 'text-white bg-primary rounded-full w-10 h-10 p-2 md:w-12 md:h-12 md:p-3 mr-4 rtl:ml-4 rtl:mr-0',
      ...((classes?.items as Record<string, never>) ?? {}),
    }}
  />
</WidgetWrapper>

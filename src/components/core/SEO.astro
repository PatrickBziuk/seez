---
/**
 * SEO - Central SEO component for comprehensive metadata and hreflang support
 * @props title, description, canonical, locale, alternateLocales, publishDate, modifiedDate, type
 * @behavior Generates complete SEO metadata including hreflang, OpenGraph, and JSON-LD
 * @dependencies None
 * @usedBy All layouts that need SEO metadata
 */
interface Props {
  title: string;
  description?: string;
  canonical?: string;
  locale?: string;
  alternateLocales?: { locale: string; url: string }[];
  publishDate?: Date;
  modifiedDate?: Date;
  type?: 'website' | 'article';
}

const {
  title,
  description,
  canonical,
  locale = 'en',
  alternateLocales = [],
  publishDate,
  modifiedDate,
  type = 'website',
} = Astro.props;

const site = Astro.site?.href || 'https://seez.eu';
const canonicalUrl = canonical || new URL(Astro.url.pathname, site).href;
const fullTitle = title.includes('Seez') ? title : `${title} | Seez`;
---

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="description" content={description} />
<link rel="canonical" href={canonicalUrl} />

<!-- Language alternates -->
{alternateLocales.map(({ locale: altLocale, url }) => <link rel="alternate" hreflang={altLocale} href={url} />)}
<link rel="alternate" hreflang="x-default" href={canonicalUrl} />

<!-- Open Graph -->
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content={canonicalUrl} />
<meta property="og:type" content={type} />
<meta property="og:locale" content={locale} />

<!-- Article-specific metadata -->
{publishDate && <meta property="article:published_time" content={publishDate.toISOString()} />}
{modifiedDate && <meta property="article:modified_time" content={modifiedDate.toISOString()} />}

<!-- JSON-LD Structured Data -->
<script
  is:inline
  type="application/ld+json"
  set:html={JSON.stringify({
    '@context': 'https://schema.org',
    '@type': type === 'article' ? 'Article' : 'WebSite',
    headline: title,
    description,
    url: canonicalUrl,
    datePublished: publishDate?.toISOString(),
    dateModified: modifiedDate?.toISOString() || publishDate?.toISOString(),
    author: {
      '@type': 'Person',
      name: 'Patrick seez',
    },
  })}
/>

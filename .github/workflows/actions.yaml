name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

# Set permissions for GitHub token
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Test build across multiple Node.js versions (only on PRs)
  test-build:
    name: Test Build (Node.js ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        node-version: [18, 20, 22]
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          echo "Installing dependencies with npm..."
          npm ci

      - name: 🔍 Run Astro check
        run: |
          echo "Running Astro type checking..."
          npm run check:astro

      - name: 🏗️ Build Astro site
        run: |
          echo "Building Astro site..."
          npm run build
          echo "✅ Build completed successfully!"

  # Code quality checks (allow to fail but still build)
  quality-check:
    name: Code Quality Check
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          echo "Installing dependencies with npm..."
          npm ci

      - name: 🔍 Run ESLint
        continue-on-error: true
        run: |
          echo "Running ESLint check..."
          npm run check:eslint || echo "⚠️ ESLint found issues, but continuing"

      - name: 💅 Run Prettier check
        continue-on-error: true
        run: |
          echo "Running Prettier check..."
          npm run check:prettier || echo "⚠️ Prettier found issues, but continuing"

  # Build and Deploy (only on main branch pushes)
  build-and-deploy:
    name: Build & Deploy to GitHub Pages
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [quality-check]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          echo "Installing dependencies with npm..."
          npm ci
          echo "✅ Dependencies installed successfully!"

      - name: 🔍 Run Astro check (allow failures)
        continue-on-error: true
        run: |
          echo "Running Astro type checking..."
          npm run check:astro || echo "⚠️ Astro check had issues, but continuing with build"

      - name: 🏗️ Build Astro site
        run: |
          echo "Building Astro site for production..."
          npm run build
          echo "✅ Build completed successfully!"
          echo "Build output directory contents:"
          ls -la dist/

      - name: 📄 Setup Pages
        uses: actions/configure-pages@v4

      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: ✅ Deployment complete
        run: |
          echo "🎉 Site successfully deployed to GitHub Pages!"
          echo "📦 Deployment SHA: ${{ github.sha }}"
          echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}"
